version: 2
jobs:
  build:
    docker:
      - image: circleci/golang:1.13.5
    steps:
      - checkout
      - run: 
          command: |
            go mod tidy
            if [ -n "$(git status --porcelain)" ]; then
              exit 1
            fi
      - run: make dev test --output-sync=target
  release:
    docker:
      - image: circleci/golang:1.13.5
    steps:
      - checkout
      - run:
          command: |
            export GITHUB_TOKEN=$GITHUB_ACCESS_TOKEN
            # goreleaser runs builds for darwin/linux together and module cache isn't safe against concurrent updates.
            # This way we avoid running into issues during goreleaser builds.
            go mod download
            # For some reason go.sum gets reordered all the time. This avoids "git is in a dirty state errors"
            go mod tidy
            make release

workflows:
  version: 2
  build-release:
    jobs:
      - build:
          filters:
            branches:
              only: /.*/
            tags:
              only: /.*/
      - release:
          requires:
            - build
          filters:
            # Only run the release on tags
            branches:
              ignore: /.*/
            tags:
              only: /.*/
